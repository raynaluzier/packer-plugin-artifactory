# Manual release workflow is used for deploying documentation updates
# on the specified branch without making an official plugin release. 
name: Notify Integration Release (Manual)
on:
  workflow_dispatch:
    inputs:
      version:
        description: "The release version (semver)"
        default: 1.0.0
        required: false
      branch:
        description: "A branch or SHA"
        default: 'main'
        required: false
jobs:
  notify-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.ref }}
      # Ensure that Docs are Compiled
      - uses: actions/setup-go@v5.2.0
        with: 
          go-version: '>=1.22'
      - shell: bash
        run: make generate
      - uses: actions/checkout@v4.2.2
      - run: |
          date > generated.txt
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch
          git checkout main
          git add .
          git commit -m "commit any updated files"
          git push origin main
      - shell: bash
        run: |
          uncommitted="$(git status -s)"
          if [[ -z "$uncommitted" ]]; then
            echo "OK"
          else
            echo "Docs have been updated, but the compiled docs have not been committed."
            echo "Run 'make generate', and commit the result to resolve this error."
            echo "Generated but uncommitted files:"
            echo "$uncommitted"
            exit 1
          fi
      # Perform the Release
      #- name: Checkout integration-release-action
      #  uses: actions/checkout@v4.2.2
      #  with:
      #    repository: hashicorp/integration-release-action
      #    path: ./integration-release-action
      #- name: Notify Release
      #  uses: ./integration-release-action
      #  with:
          # The integration identifier will be used by the Packer team to register the integration
          # the expected format is packer/<GitHub Org Name>/<plugin-name>
      #    integration_identifier: "packer/hashicorp/artifactory"
      #    release_version: ${{ github.event.inputs.version }}
      #    release_sha: ${{ github.event.inputs.branch }}
      #    github_token: ${{ secrets.GITHUB_TOKEN }}
